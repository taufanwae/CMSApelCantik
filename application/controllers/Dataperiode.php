<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Dataperiode extends CI_Controller{
    function __construct()
    {
        parent::__construct(); 
        if (!$this->session->userdata('login')) {
            redirect('login','index');
        }
        $this->load->model('M_dataperiode');
    } 

    /*
     * Listing of dataperiode
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $data['dataperiode'] = $this->M_dataperiode->get_all_dataperiode($params);
        
        $data['_view'] = 'dataperiode/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new desa
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('bulan','Bulan','required');
		$this->form_validation->set_rules('tahun','Tahun','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'bulan' => $this->input->post('bulan'),
				'tahun' => $this->input->post('tahun'),
            );
            
            $desa_id = $this->M_dataperiode->add_dataperiode($params);
            redirect('dataperiode/index');
        }
        else
        {
			$arrbulan = array( 'Januari',
                'Februari',
                'Maret',
                'April',
                'Mei',
                'Juni',
                'Juli',
                'Agustus',
                'September',
                'Oktober','Desember' );

            $data['arrbulan'] = $arrbulan;
            $data['_view'] = 'dataperiode/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a desa
     */
    function edit($idperode)
    {   
        // check if the desa exists before trying to edit it
        $data['desa'] = $this->M_dataperiode->get_dataperiode($idperode);
        
        if(isset($data['desa']['idperiode']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('bulan','Bulan','required');
			$this->form_validation->set_rules('tahun','Tahun','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'bulan' => $this->input->post('bulan'),
					'tahun' => $this->input->post('tahun'),
                );

                $this->M_dataperiode->update_dataperiode($idperode,$params);            
                redirect('dataperiode/index');
            }
            else
            {

               // print_r($_POST); die;
				$arrbulan = array( 'Januari',
                'Februari',
                'Maret',
                'April',
                'Mei',
                'Juni',
                'Juli',
                'Agustus',
                'September',
                'Oktober','Desember' );

                $data['arrbulan'] = $arrbulan;

                $data['_view'] = 'dataperiode/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The desa you are trying to edit does not exist.');
    } 

    /*
     * Deleting desa
     */
    function remove($desa_id)
    {
        $desa = $this->M_dataperiode->get_dataperiode($desa_id);
        //print_r($desa); die;

        // check if the desa exists before trying to delete it
        if(isset($desa['idperiode']))
        {
            $this->M_dataperiode->delete_dataperiode($desa_id);
            redirect('dataperiode/index');
        }
        else
            show_error('The data you are trying to delete does not exist.');
    }
    
}
