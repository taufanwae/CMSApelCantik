 <?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Useradmin extends CI_Controller{
    function __construct()
    {
        parent::__construct(); 
        if (!$this->session->userdata('login')) {
            redirect('login','index');
        }
        $this->load->model('Useradmin_model');
    } 

    /*
     * Listing of mstadmin
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('useradmin/index?');
        $config['total_rows'] = $this->Useradmin_model->get_all_mstadmin_count();
        $this->pagination->initialize($config);

        $data['mstadmin'] = $this->Useradmin_model->get_all_mstadmin($params);
        
        $data['_view'] = 'useradmin/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new admin
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('password','Password','min_length[5]|required');
		$this->form_validation->set_rules('full_name','Full Name','required');
		$this->form_validation->set_rules('unit_id','Unit Id','required');
		$this->form_validation->set_rules('level_akses','Level Akses','required');
		$this->form_validation->set_rules('email','Email','valid_email|required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'unit_id' => $this->input->post('unit_id'),
				'level_akses' => $this->input->post('level_akses'),
				'password' => md5($this->input->post('password')),
				'active_status' => "1",
				'full_name' => $this->input->post('full_name'),
				'created_at' => date('Y-m-d H:i:s'),
				'email' => $this->input->post('email'),
            );
            
            $admin_id = $this->Useradmin_model->add_admin($params);
            redirect('useradmin/index');
        }
        else
        {
			$this->load->model('Mstunit_model');
			$data['all_mstunit'] = $this->Mstunit_model->get_all_mstunit();

			$this->load->model('M_levelakses');
			$data['all_mstlevel_akses'] = $this->M_levelakses->get_all_mstlevel_akses();
            
            $data['_view'] = 'useradmin/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a admin
     */
    function edit($admin_id)
    {   
        // check if the admin exists before trying to edit it
        $data['admin'] = $this->Useradmin_model->get_admin($admin_id);
        
        
        if(isset($data['admin']['admin_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('password','Password','min_length[5]|required');
			$this->form_validation->set_rules('full_name','Full Name','required');
			$this->form_validation->set_rules('unit_id','Unit Id','required');
			$this->form_validation->set_rules('level_akses','Level Akses','required');
			$this->form_validation->set_rules('email','Email','valid_email|required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'unit_id' => $this->input->post('unit_id'),
					'level_akses' => $this->input->post('level_akses'),
					'password' => $this->input->post('password'),
					'active_status' => $this->input->post('active_status'),
					'full_name' => $this->input->post('full_name'),
					'email' => $this->input->post('email'),
                );

                $this->Useradmin_model->update_admin($admin_id,$params);            
                redirect('useradmin/index');
            }
            else
            {
				$this->load->model('Mstunit_model');
				$data['all_mstunit'] = $this->Mstunit_model->get_all_mstunit();

				$this->load->model('M_levelakses');
				$data['all_mstlevel_akses'] = $this->M_levelakses->get_all_mstlevel_akses();

                $data['_view'] = 'useradmin/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The admin you are trying to edit does not exist.');
    } 

    /*
     * Deleting admin
     */
    function remove($admin_id)
    {
        $admin = $this->Useradmin_model->get_admin($admin_id);

        // check if the admin exists before trying to delete it
        if(isset($admin['admin_id']))
        {
            $this->Useradmin_model->delete_admin($admin_id);
            redirect('useradmin/index');
        }
        else
            show_error('The admin you are trying to delete does not exist.');
    }
    
}
